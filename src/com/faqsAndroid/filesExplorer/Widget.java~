package com.faqsAndroid.filesExplorer;

import android.app.PendingIntent;
import android.appwidget.AppWidgetManager;
import android.appwidget.AppWidgetProvider;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.preference.PreferenceManager;
import android.widget.RemoteViews;

public class Widget extends AppWidgetProvider 
{	
	private static final String FORZE_WIDGETS_UPDATE_ACTION = Widget.class.getName() + ".FORZE_WIDGETS_UPDATE";
						
	private static final int UNKNOWN_WIDGET_ID = -1;
		
	public void onReceive(Context context, Intent intent) 
	{
		if (intent.getAction().equals(FORZE_WIDGETS_UPDATE_ACTION))
		{
			// Se ha activado el evento de repintado (forzado) de los widgets...
			
			AppWidgetManager app_widget_manager = AppWidgetManager.getInstance(context);
			int widget_id = intent.getIntExtra(AppWidgetManager.EXTRA_APPWIDGET_ID, UNKNOWN_WIDGET_ID);
			if (widget_id == UNKNOWN_WIDGET_ID) onUpdate(context, app_widget_manager, app_widget_manager.getAppWidgetIds(new ComponentName(context, Widget.class)));         		
			else onUpdate(context, app_widget_manager, new int [] { widget_id });
		} 
		super.onReceive(context,intent);
	}
	
	// Algún widget se ha eliminado. Borramos sus preferencias...
	
	public void onDeleted(Context context, int [] app_widget_ids)
	{
		SharedPreferences.Editor preferences_editor = PreferenceManager.getDefaultSharedPreferences(context).edit();
		for (int i = 0; i < app_widget_ids.length; i ++) 
		{
			preferences_editor.remove(String.format("widget_%d_root_folder", app_widget_ids [i]));
		}
		preferences_editor.commit();
	}
	
	// Hay que actualizar algunos widgets...

	public void onUpdate(Context context, AppWidgetManager app_widget_manager, int [] app_widget_ids) 
	{
		for (int i = 0; i < app_widget_ids.length; i ++) updateWidget(context, app_widget_manager, app_widget_ids [i]);
	}
	
	// Hay que actualizar un widget...
	
	private void updateWidget(Context context, AppWidgetManager app_widget_manager, int widget_id) 
	{
		// Obtenemos la vista a partir del layout.
		
		RemoteViews views = new RemoteViews(context.getPackageName(), R.layout.widget);
		
		// Añadimos el icono.
		
		views.setImageViewResource(R.id.icon, R.drawable.ic_launcher);
		
		// Añadimos la etiqueta con el nombre del directorio raíz.
		
		String root_folder = getRootFolder(context, widget_id);
		if (root_folder.length() == 0) root_folder = "/";
		else 
		{
			int index = root_folder.lastIndexOf("/");
			root_folder = root_folder.substring(index + 1);
		}
				
		views.setTextViewText(R.id.label, root_folder);

		// Haremos que se abra la actividad principal al clicar el widget
		// pasándole como parámetro el directorio raíz...
		
		Intent intent = new Intent(context, MainActivity.class);
		intent.putExtra("root_folder", PreferenceManager.getDefaultSharedPreferences(context).getString(String.format("widget_%d_root_folder", widget_id), ""));
		views.setOnClickPendingIntent(R.id.layout, PendingIntent.getActivity(context, widget_id, intent, PendingIntent.FLAG_UPDATE_CURRENT));
		
		// Aceptamos los cambios.
		
		app_widget_manager.updateAppWidget(widget_id, views);
	}  
	
	// Forzamos la actualización de todos los widgets.
	
	public static void updateWidgets(Context context)
	{
		updateWidget(context, UNKNOWN_WIDGET_ID);
	}

	// Forzamos la actualización de un widget.
	
	public static void updateWidget(Context context, int widget_id)
	{
		Intent intent = new Intent(context, Widget.class);
		intent.setAction(FORZE_WIDGETS_UPDATE_ACTION);
		intent.putExtra(AppWidgetManager.EXTRA_APPWIDGET_ID, widget_id);
		context.sendBroadcast(intent);
	}
	
	// Obtenemos el directorio raíz de un widget.
	
	private static String getRootFolder(Context context, int widget_id)
	{
		return PreferenceManager.getDefaultSharedPreferences(context).getString(String.format("widget_%d_root_folder", widget_id), "");
	}
	
	// Fijamos el directorio raíz de un widget.
	
	public static void setRootFolder(Context context, int widget_id, String root_folder)
	{
		SharedPreferences.Editor preferences_editor = PreferenceManager.getDefaultSharedPreferences(context).edit();
		preferences_editor.putString(String.format("widget_%d_root_folder", widget_id), root_folder);
		preferences_editor.commit();		
	}
}

